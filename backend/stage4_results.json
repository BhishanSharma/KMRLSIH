[
  {
    "doc_id": "singly_linkedlist.png",
    "raw_text": "Head ‘Beginnersbook.conv\n= Last node of LinkedList\nContent  Address(Pointer) of the next Points to null\nnode\n\\\nLi} 15 3600-——| 3 4000 ——--| 17 4400-- 90 null\n3200 3600 4000 4400\n\n",
    "file_type": "png",
    "length": 31,
    "cleaned_text": "head beginnersbook.conv  last node of linkedlist content address(pointer) of the next points to null node  li 15 3600- 3 4000 -- 17 4400-- 90 null 3200 3600 4000 4400 ",
    "sentences": [
      "head beginnersbook.conv  last node of linkedlist content address(pointer) of the next points to null node  li 15 3600- 3 4000 -- 17 4400-- 90 null 3200 3600 4000 4400"
    ],
    "words": [
      "head",
      "beginnersbook.conv",
      "last",
      "node",
      "linkedlist",
      "content",
      "address",
      "pointer",
      "next",
      "point",
      "null",
      "node",
      "li",
      "<NUM>",
      "<NUM>-",
      "<NUM>",
      "<NUM>",
      "<NUM>",
      "<NUM>",
      "<NUM>",
      "null",
      "<NUM>",
      "<NUM>",
      "<NUM>",
      "<NUM>"
    ],
    "num_sentences": 1,
    "num_words": 25,
    "chunks": [
      {
        "sentences": [
          "head beginnersbook.conv  last node of linkedlist content address(pointer) of the next points to null node  li 15 3600- 3 4000 -- 17 4400-- 90 null 3200 3600 4000 4400"
        ],
        "words": [
          "head",
          "beginnersbook.conv",
          "last",
          "node",
          "of",
          "linkedlist",
          "content",
          "address(pointer)",
          "of",
          "the",
          "next",
          "points",
          "to",
          "null",
          "node",
          "li",
          "15",
          "3600-",
          "3",
          "4000",
          "--",
          "17",
          "4400--",
          "90",
          "null",
          "3200",
          "3600",
          "4000",
          "4400"
        ],
        "chunk_id": 1,
        "entities": {
          "DATE": [
            "3600",
            "4000",
            "4400",
            "3200",
            "3600",
            "4000",
            "4400"
          ]
        },
        "summary": "head beginnersbook.conv last node of linkedlist content address(pointer) of the next points to null"
      }
    ],
    "doc_summary": "head beginnersbook.conv last node of linkedlist content address(pointer) of the next points to null",
    "entities": {
      "DATE": [
        "4400",
        "3600",
        "4000",
        "3200"
      ]
    }
  },
  {
    "doc_id": "CA_cap_918.pdf",
    "raw_text": "CAP – 918 Mobile-application\nwrite a program to change the text of a heading\n<div class=\"CA-heading\">\n<p>\n{{ headingText }}\n</p>\n<button (click)=\"changeON()\">text</button>\n<button (click)=\"changeOFF()\">Back</button>\n</div>\nchangeON() {\nthis.headingText = 'HELLO SIR FULL MARKS\nPLEASE';\nconsole.log('Button clicked, text changed.');\n// after clicking again on button\n}\nchangeOFF(){\nthis.headingText = 'NO MARKSSSSS';console.log('Button clicked, text changed back.');\n}Decentralized Book Exchange\n\nGET STARTED\n\nHELLO SIR FULL MARKS PLEASE",
    "file_type": "pdf",
    "length": 65,
    "cleaned_text": "cap  918 mobile-application write a program to change the text of a heading div classca-heading p  headingtext  p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon()  this.headingtext  hello sir full marks please; console.log(button clicked, text changed.);  after clicking again on button  changeoff() this.headingtext  no marksssss;console.log(button clicked, text changed back.); decentralized book exchange get started hello sir full marks please",
    "sentences": [
      "cap  918 mobile-application write a program to change the text of a heading div classca-heading p  headingtext  p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon()  this.headingtext  hello sir full marks please; console.log(button clicked, text changed.",
      ");  after clicking again on button  changeoff() this.headingtext  no marksssss;console.log(button clicked, text changed back.",
      "); decentralized book exchange get started hello sir full marks please"
    ],
    "words": [
      "cap",
      "<NUM>",
      "mobile-application",
      "write",
      "program",
      "change",
      "text",
      "heading",
      "div",
      "classca-heading",
      "p",
      "headingtext",
      "p",
      "button",
      "click",
      "changeon",
      "textbutton",
      "button",
      "click",
      "changeoff",
      "backbutton",
      "div",
      "changeon",
      "this.headingtext",
      "hello",
      "sir",
      "full",
      "mark",
      "please",
      "console.log",
      "button",
      "clicked",
      "text",
      "changed",
      "clicking",
      "button",
      "changeoff",
      "this.headingtext",
      "marksssss",
      "console.log",
      "button",
      "clicked",
      "text",
      "changed",
      "back",
      "decentralized",
      "book",
      "exchange",
      "get",
      "started",
      "hello",
      "sir",
      "full",
      "mark",
      "please"
    ],
    "num_sentences": 3,
    "num_words": 55,
    "chunks": [
      {
        "sentences": [
          "cap  918 mobile-application write a program to change the text of a heading div classca-heading p  headingtext  p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon()  this.headingtext  hello sir full marks please; console.log(button clicked, text changed.",
          ");  after clicking again on button  changeoff() this.headingtext  no marksssss;console.log(button clicked, text changed back.",
          "); decentralized book exchange get started hello sir full marks please"
        ],
        "words": [
          "cap",
          "918",
          "mobile-application",
          "write",
          "a",
          "program",
          "to",
          "change",
          "the",
          "text",
          "of",
          "a",
          "heading",
          "div",
          "classca-heading",
          "p",
          "headingtext",
          "p",
          "button",
          "(click)changeon()textbutton",
          "button",
          "(click)changeoff()backbutton",
          "div",
          "changeon()",
          "this.headingtext",
          "hello",
          "sir",
          "full",
          "marks",
          "please;",
          "console.log(button",
          "clicked,",
          "text",
          "changed.",
          ");",
          "after",
          "clicking",
          "again",
          "on",
          "button",
          "changeoff()",
          "this.headingtext",
          "no",
          "marksssss;console.log(button",
          "clicked,",
          "text",
          "changed",
          "back.",
          ");",
          "decentralized",
          "book",
          "exchange",
          "get",
          "started",
          "hello",
          "sir",
          "full",
          "marks",
          "please"
        ],
        "chunk_id": 1,
        "entities": {},
        "summary": "cap 918 mobile-application napište program pro změnu textu čísla div classca-heading p headingtext p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon() this.heading"
      }
    ],
    "doc_summary": "cap 918 mobile-application napište program pro změnu textu čísla div classca-heading p headingtext p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon() this.heading",
    "entities": {}
  },
  {
    "doc_id": "gg.pdf",
    "raw_text": "Your Ingestion Requirements vs Platform\nCapabilities\n\nRequirement = Can n8n Do It? Easier Alternatives\n\nEmail ingestion (IMAP/SMTP) ( Yes (IMAP Email Trigger, Make, Zapier, Airparser\nSMTP via webhook)\n\nMaximo export API © Yes (HTTP Request node Airbyte, Apache NiFi, Talend\nintegration for REST API)\n\nSharePoint API integration © Yes (Microsoft Graph API Power Automate, Make\nvia HTTP node) Integrate.io\n\nWhatsApp PDF ingestion ( Yes (via HTTP API or Twilio Studio, 360dialog, Osmos\n(Meta/Twilio) webhook)\n\nManual file uploads (scans, 14 Yes (Webhook node or Osmos, Docparser, Make\nlinks) custom frontend)\n\nFile type handling (PDF. Yes (Binary data + parsing Docsumo, Rossum, Nanonets\nDOCX, XLSX, images) nodes)\n\n=\n~\n.\n~\n°\n.\n.\n.\n.\n= ടട [1\n°\n~\n\nBilingual text (English + 4. Partially (needs external Google Cloud Vision +\nMalayalam) OCR + language detection) Translate, AWS Textract +\nComprehend\n\nOCR for scanned 4. Needs external API Nanonets, Docsumo, AWS\nimages/handwritten notes (Tesseract, Google Vision) Textract\n\nAirparser, Make, Power\nAutomate\n\nMetadata extraction 4 Yes (via logic nodes +\n(timestamp, sender, external APIs)\nlanguage, etc.)",
    "file_type": "pdf",
    "length": 175,
    "cleaned_text": "your ingestion requirements vs platform capabilities requirement  can n8n do it? easier alternatives email ingestion (imapsmtp) ( yes (imap email trigger, make, zapier, airparser smtp via webhook) maximo export api  yes (http request node airbyte, apache nifi, talend integration for rest api) sharepoint api integration  yes (microsoft graph api power automate, make via http node) integrate.io whatsapp pdf ingestion ( yes (via http api or twilio studio, 360dialog, osmos (metatwilio) webhook) manual file uploads (scans, 14 yes (webhook node or osmos, docparser, make links) custom frontend) file type handling (pdf. yes (binary data  parsing docsumo, rossum, nanonets docx, xlsx, images) nodes)   .   . . . .  ടട 1   bilingual text (english  4. partially (needs external google cloud vision  malayalam) ocr  language detection) translate, aws textract  comprehend ocr for scanned 4. needs external api nanonets, docsumo, aws imageshandwritten notes (tesseract, google vision) textract airparser, make, power automate metadata extraction 4 yes (via logic nodes  (timestamp, sender, external apis) language, etc.)",
    "sentences": [
      "your ingestion requirements vs platform capabilities requirement  can n8n do it?",
      "easier alternatives email ingestion (imapsmtp) ( yes (imap email trigger, make, zapier, airparser smtp via webhook) maximo export api  yes (http request node airbyte, apache nifi, talend integration for rest api) sharepoint api integration  yes (microsoft graph api power automate, make via http node) integrate.io whatsapp pdf ingestion ( yes (via http api or twilio studio, 360dialog, osmos (metatwilio) webhook) manual file uploads (scans, 14 yes (webhook node or osmos, docparser, make links) custom frontend) file type handling (pdf.",
      "yes (binary data  parsing docsumo, rossum, nanonets docx, xlsx, images) nodes)   .",
      ".",
      ".",
      ".",
      ".",
      "ടട 1   bilingual text (english  4. partially (needs external google cloud vision  malayalam) ocr  language detection) translate, aws textract  comprehend ocr for scanned 4. needs external api nanonets, docsumo, aws imageshandwritten notes (tesseract, google vision) textract airparser, make, power automate metadata extraction 4 yes (via logic nodes  (timestamp, sender, external apis) language, etc.)"
    ],
    "words": [
      "ingestion",
      "requirement",
      "v",
      "platform",
      "capability",
      "requirement",
      "n<NUM>n",
      "easier",
      "alternative",
      "email",
      "ingestion",
      "imapsmtp",
      "yes",
      "imap",
      "email",
      "trigger",
      "make",
      "zapier",
      "airparser",
      "smtp",
      "via",
      "webhook",
      "maximo",
      "export",
      "api",
      "yes",
      "http",
      "request",
      "node",
      "airbyte",
      "apache",
      "nifi",
      "talend",
      "integration",
      "rest",
      "api",
      "sharepoint",
      "api",
      "integration",
      "yes",
      "microsoft",
      "graph",
      "api",
      "power",
      "automate",
      "make",
      "via",
      "http",
      "node",
      "integrate.io",
      "whatsapp",
      "pdf",
      "ingestion",
      "yes",
      "via",
      "http",
      "api",
      "twilio",
      "studio",
      "<NUM>dialog",
      "osmos",
      "metatwilio",
      "webhook",
      "manual",
      "file",
      "uploads",
      "scan",
      "<NUM>",
      "yes",
      "webhook",
      "node",
      "osmos",
      "docparser",
      "make",
      "link",
      "custom",
      "frontend",
      "file",
      "type",
      "handling",
      "pdf",
      "yes",
      "binary",
      "data",
      "parsing",
      "docsumo",
      "rossum",
      "nanonets",
      "docx",
      "xlsx",
      "image",
      "node",
      "<NUM>",
      "bilingual",
      "text",
      "english",
      "<NUM>.",
      "partially",
      "need",
      "external",
      "google",
      "cloud",
      "vision",
      "malayalam",
      "ocr",
      "language",
      "detection",
      "translate",
      "aws",
      "textract",
      "comprehend",
      "ocr",
      "scanned",
      "<NUM>.",
      "need",
      "external",
      "api",
      "nanonets",
      "docsumo",
      "aws",
      "imageshandwritten",
      "note",
      "tesseract",
      "google",
      "vision",
      "textract",
      "airparser",
      "make",
      "power",
      "automate",
      "metadata",
      "extraction",
      "<NUM>",
      "yes",
      "via",
      "logic",
      "node",
      "timestamp",
      "sender",
      "external",
      "apis",
      "language",
      "etc"
    ],
    "num_sentences": 8,
    "num_words": 143,
    "chunks": [
      {
        "sentences": [
          "your ingestion requirements vs platform capabilities requirement  can n8n do it?",
          "easier alternatives email ingestion (imapsmtp) ( yes (imap email trigger, make, zapier, airparser smtp via webhook) maximo export api  yes (http request node airbyte, apache nifi, talend integration for rest api) sharepoint api integration  yes (microsoft graph api power automate, make via http node) integrate.io whatsapp pdf ingestion ( yes (via http api or twilio studio, 360dialog, osmos (metatwilio) webhook) manual file uploads (scans, 14 yes (webhook node or osmos, docparser, make links) custom frontend) file type handling (pdf."
        ],
        "words": [
          "your",
          "ingestion",
          "requirements",
          "vs",
          "platform",
          "capabilities",
          "requirement",
          "can",
          "n8n",
          "do",
          "it?",
          "easier",
          "alternatives",
          "email",
          "ingestion",
          "(imapsmtp)",
          "(",
          "yes",
          "(imap",
          "email",
          "trigger,",
          "make,",
          "zapier,",
          "airparser",
          "smtp",
          "via",
          "webhook)",
          "maximo",
          "export",
          "api",
          "yes",
          "(http",
          "request",
          "node",
          "airbyte,",
          "apache",
          "nifi,",
          "talend",
          "integration",
          "for",
          "rest",
          "api)",
          "sharepoint",
          "api",
          "integration",
          "yes",
          "(microsoft",
          "graph",
          "api",
          "power",
          "automate,",
          "make",
          "via",
          "http",
          "node)",
          "integrate.io",
          "whatsapp",
          "pdf",
          "ingestion",
          "(",
          "yes",
          "(via",
          "http",
          "api",
          "or",
          "twilio",
          "studio,",
          "360dialog,",
          "osmos",
          "(metatwilio)",
          "webhook)",
          "manual",
          "file",
          "uploads",
          "(scans,",
          "14",
          "yes",
          "(webhook",
          "node",
          "or",
          "osmos,",
          "docparser,",
          "make",
          "links)",
          "custom",
          "frontend)",
          "file",
          "type",
          "handling",
          "(pdf."
        ],
        "chunk_id": 1,
        "entities": {},
        "summary": "ستاسو د انډول اړتیاوې vs د پلیټ فارم وړتیاوې اړتیا کولی شي n8n دا وکړي؟ اسانه بدیلونه د بریښنالیک انډول (imapsmtp) (هو (imap بریښنالیک ټریګر،"
      },
      {
        "sentences": [
          "yes (binary data  parsing docsumo, rossum, nanonets docx, xlsx, images) nodes)   .",
          ".",
          ".",
          ".",
          ".",
          "ടട 1   bilingual text (english  4. partially (needs external google cloud vision  malayalam) ocr  language detection) translate, aws textract  comprehend ocr for scanned 4. needs external api nanonets, docsumo, aws imageshandwritten notes (tesseract, google vision) textract airparser, make, power automate metadata extraction 4 yes (via logic nodes  (timestamp, sender, external apis) language, etc.)"
        ],
        "words": [
          "yes",
          "(binary",
          "data",
          "parsing",
          "docsumo,",
          "rossum,",
          "nanonets",
          "docx,",
          "xlsx,",
          "images)",
          "nodes)",
          ".",
          ".",
          ".",
          ".",
          ".",
          "ടട",
          "1",
          "bilingual",
          "text",
          "(english",
          "4.",
          "partially",
          "(needs",
          "external",
          "google",
          "cloud",
          "vision",
          "malayalam)",
          "ocr",
          "language",
          "detection)",
          "translate,",
          "aws",
          "textract",
          "comprehend",
          "ocr",
          "for",
          "scanned",
          "4.",
          "needs",
          "external",
          "api",
          "nanonets,",
          "docsumo,",
          "aws",
          "imageshandwritten",
          "notes",
          "(tesseract,",
          "google",
          "vision)",
          "textract",
          "airparser,",
          "make,",
          "power",
          "automate",
          "metadata",
          "extraction",
          "4",
          "yes",
          "(via",
          "logic",
          "nodes",
          "(timestamp,",
          "sender,",
          "external",
          "apis)",
          "language,",
          "etc.)"
        ],
        "chunk_id": 2,
        "entities": {},
        "summary": "هو (binary data parsing docsumo، rossum، nanonets docx، xlsx، انځورونه) نوډونه) . . . . . ടട 1 دوه ژبې متن (انګلیسي 4. په نسبي ډول"
      }
    ],
    "doc_summary": "ستاسو د ننوتلو اړتیاوې vs د پلیټ فارم وړتیاوې اړتیا کولی شي n8n دا وکړي؟ اسانه بدیلونه د بریښنالیک ننوتلو (imapsmtp) (هو (imap بریښنالیک ټریګر،",
    "entities": {}
  },
  {
    "doc_id": "SIH-Logo.png",
    "raw_text": "വിത്‌ smart innia\n7 - HACKATHON\nSH\n\n=F 2025\n\n",
    "file_type": "png",
    "length": 9,
    "cleaned_text": "വത smart innia 7 - hackathon sh f 2025 ",
    "sentences": [
      "വത smart innia 7 - hackathon sh f 2025"
    ],
    "words": [
      "smart",
      "innia",
      "<NUM>",
      "hackathon",
      "sh",
      "f",
      "<NUM>"
    ],
    "num_sentences": 1,
    "num_words": 7,
    "chunks": [
      {
        "sentences": [
          "വത smart innia 7 - hackathon sh f 2025"
        ],
        "words": [
          "വത",
          "smart",
          "innia",
          "7",
          "-",
          "hackathon",
          "sh",
          "f",
          "2025"
        ],
        "chunk_id": 1,
        "entities": {
          "DATE": [
            "2025"
          ]
        },
        "summary": "വത smart innia 7 - hackathon sh f 2025"
      }
    ],
    "doc_summary": "വത smart innia 7 - hackathon sh f 2025",
    "entities": {
      "DATE": [
        "2025"
      ]
    }
  },
  {
    "doc_id": "ML.pdf",
    "raw_text": "െകാ\u0000ി െമേ\u0000ാ െറയി\nൽ\nേസ\u0000ി ആ ൻഡ് േകാംപ്ലയ ൻസ് ഡിപ്പാ ർ\u0000് െമ\u0000്\nസുരക്ഷാ വി\u0000ാപനം / ആഭ\u0000ന്തര സ\nർക്കുലർ\nRef. No.: KMRL/SC/2025/09\nതീയതി: 21-09-2025\nവിഷയം: സുരക്ഷാ നടപടിക ക പാലിക്കുന്നതിനുള്ള നി\nൾ ർശനമായി ർേ\u0000ശങ്ങൾ\nെകാ\u0000ി െമേ\u0000ാ െറയി യാത്രക്കാരുെടയും ജീവനക്കാരുെടയും സുരക്ഷ ഉറപ്പാക്കുന്നതിനായി താെഴ പറയുന്ന\nൽ\nനി ഉട പ്രാബല\u0000ത്തി വരുത്തുന്നു:\nർേ\u0000ശങ്ങൾ ൻ ൽ\n1. േ\u0000ഷ സുരക്ഷ:\nൻ\n○ എ\u0000ാ േ\u0000ഷനുകളി\u0000ം സുരക്ഷാ ഉേദ\u0000ാഗസ്ഥ പൂ സമയ നിരീക്ഷണം നടത്തണം.\nർ ർണ്ണ\n○ ബാേഗജ് \u0000ാനിംഗ് സംവിധാനം ശരിയായി പ്രവ എന്ന് ദിവേസന\nർ\u0000ിക്കു\u0000ുേ\u0000ാ\nപരിേശാധന നടത്തണം.\n2. െ\u0000യി ൻ ഓപ്പേറഷ ൻസ് :\n○ എ\u0000ാ ൈ\u0000വ യാത്ര തുടങ്ങുന്നതിനുമു\u0000് സുരക്ഷാ െചക്ക\u0000ി\u0000് പൂ\nർമാരും ർണ്ണ മായി\nപരിേശാധി\u0000ിരിക്കണം.\n○ അടിയന്തര ഘട്ടങ്ങളി (Emergency) SOP (Standard Operating Procedure)\nൽ\nക പാലിക്കണം.\nർശനമായി\n3. യാത്രക്കാരുെട സുരക്ഷ:\n○ പ്ലാറ്റ്േഫാം ഏരിയയി അടിയന്തര പുറപ്പാട് മാ (Emergency Exits) എ\u0000ായ്േപ്പാ\u0000ം\nൽ ർഗങ്ങൾ\nതുറന്നിരിക്കണം.\n○ യാത്രക്കാ ർക്ക് സുരക്ഷാ നി ർേ\u0000ശങ്ങൾ അറിയിക്കുന്നതിനായി മലയാളം, ഇം\u0000ീഷ്, ഹി\u0000ി\nഭാഷകളി പ്രഖ\u0000ാപനങ്ങ നടത്തണം.\nൽ ൾ\n4. ഫയ ർ ആ ൻഡ് ഇല\u0000ിക്ക ൽ സുരക്ഷ:\n○ ഫയ എക്\u0000ിംഗ\u0000ിഷറുക എ\u0000ാ മാസവും പരിേശാധിക്കണം.\nർ ൾ\n○ ൈവദ\u0000തി സംവിധാനങ്ങളി ൽ ഉ\u0000ാേയക്കാവുന്ന തകരാറുക ൾ ഉട ൻ റിേപ്പാ ർ\u0000് െചയ്യണം.5. റിേപ്പാ ർ\u0000ിംഗ് & ഓഡിറ്റ്:\n○ എ\u0000ാ സുരക്ഷാ സംഭവങ്ങ\u0000ം (Incidents) 24 മണിക്കൂറിനകം റിേപ്പാ ർ\u0000് െചയ്യണം.\n○ മാസാന്ത ഓഡിറ്റ് റിേപ്പാ ർ\u0000് Safety & Compliance Head-ന് സമ ർ\u0000ിക്കണം .\nBy Order,\n[സുരക്ഷാ & അനുസൃത വിഭാഗം]\nെകാ\u0000ി െമേ\u0000ാ െറയി ലിമിറ്റഡ് (KMRL)\nൽ",
    "file_type": "pdf",
    "length": 201,
    "cleaned_text": "ക മ റയ ൽ സ ആ ൻഡ കപലയ ൻസ ഡപപ ർ മ സരകഷ വപന  ആഭനതര സ ർകകലർ ref. no.: kmrlsc202509 തയത: 21-09-2025 വഷയ: സരകഷ നടപടക ക പലകകനനതനളള ന ൾ ർശനമയ ർശങങൾ ക മ റയ യതരകകരടയ ജവനകകരടയ സരകഷ ഉറപപകകനനതനയ തഴ പറയനന ൽ ന ഉട പരബലതത വരതതനന: ർശങങൾ ൻ ൽ 1. ഷ സരകഷ: ൻ  എ ഷനകള സരകഷ ഉദഗസഥ പ സമയ നരകഷണ നടതതണ. ർ ർണണ  ബഗജ നഗ സവധന ശരയയ പരവ എനന ദവസന ർകക പരശധന നടതതണ. 2. യ ൻ ഓപപറഷ ൻസ :  എ വ യതര തടങങനനതനമ സരകഷ ചകക പ ർമര ർണണ മയ പരശധരകകണ.  അടയനതര ഘടടങങള (emergency) sop (standard operating procedure) ൽ ക പലകകണ. ർശനമയ 3. യതരകകരട സരകഷ:  പലററഫ ഏരയയ അടയനതര പറപപട മ (emergency exits) എയപപ ൽ ർഗങങൾ തറനനരകകണ.  യതരകക ർകക സരകഷ ന ർശങങൾ അറയകകനനതനയ മലയള, ഇഷ, ഹ ഭഷകള പരഖപനങങ നടതതണ. ൽ ൾ 4. ഫയ ർ ആ ൻഡ ഇലകക ൽ സരകഷ:  ഫയ എകഗഷറക എ മസവ പരശധകകണ. ർ ൾ  വദത സവധനങങള ൽ ഉയകകവനന തകരറക ൾ ഉട ൻ റപപ ർ ചയയണ.5. റപപ ർഗ  ഓഡററ:  എ സരകഷ സഭവങങ (incidents) 24 മണകകറനക റപപ ർ ചയയണ.  മസനത ഓഡററ റപപ ർ safety  compliance head-ന സമ ർകകണ . by order, സരകഷ  അനസത വഭഗ ക മ റയ ലമററഡ (kmrl) ൽ",
    "sentences": [
      "ക മ റയ ൽ സ ആ ൻഡ കപലയ ൻസ ഡപപ ർ മ സരകഷ വപന  ആഭനതര സ ർകകലർ ref.",
      "no.",
      ": kmrlsc202509 തയത: 21-09-2025 വഷയ: സരകഷ നടപടക ക പലകകനനതനളള ന ൾ ർശനമയ ർശങങൾ ക മ റയ യതരകകരടയ ജവനകകരടയ സരകഷ ഉറപപകകനനതനയ തഴ പറയനന ൽ ന ഉട പരബലതത വരതതനന: ർശങങൾ ൻ ൽ 1.",
      "ഷ സരകഷ: ൻ  എ ഷനകള സരകഷ ഉദഗസഥ പ സമയ നരകഷണ നടതതണ.",
      "ർ ർണണ  ബഗജ നഗ സവധന ശരയയ പരവ എനന ദവസന ർകക പരശധന നടതതണ.",
      "2.",
      "യ ൻ ഓപപറഷ ൻസ :  എ വ യതര തടങങനനതനമ സരകഷ ചകക പ ർമര ർണണ മയ പരശധരകകണ.",
      "അടയനതര ഘടടങങള (emergency) sop (standard operating procedure) ൽ ക പലകകണ.",
      "ർശനമയ 3.",
      "യതരകകരട സരകഷ:  പലററഫ ഏരയയ അടയനതര പറപപട മ (emergency exits) എയപപ ൽ ർഗങങൾ തറനനരകകണ.",
      "യതരകക ർകക സരകഷ ന ർശങങൾ അറയകകനനതനയ മലയള, ഇഷ, ഹ ഭഷകള പരഖപനങങ നടതതണ.",
      "ൽ ൾ 4.",
      "ഫയ ർ ആ ൻഡ ഇലകക ൽ സരകഷ:  ഫയ എകഗഷറക എ മസവ പരശധകകണ.",
      "ർ ൾ  വദത സവധനങങള ൽ ഉയകകവനന തകരറക ൾ ഉട ൻ റപപ ർ ചയയണ.5.",
      "റപപ ർഗ  ഓഡററ:  എ സരകഷ സഭവങങ (incidents) 24 മണകകറനക റപപ ർ ചയയണ.",
      "മസനത ഓഡററ റപപ ർ safety  compliance head-ന സമ ർകകണ .",
      "by order, സരകഷ  അനസത വഭഗ ക മ റയ ലമററഡ (kmrl) ൽ"
    ],
    "words": [
      "ref",
      "kmrlsc<NUM>",
      "<NUM>-<NUM>-<NUM>",
      "<NUM>",
      "<NUM>",
      "emergency",
      "sop",
      "standard",
      "operating",
      "procedure",
      "<NUM>",
      "emergency",
      "exit",
      "<NUM>",
      "incident",
      "<NUM>",
      "safety",
      "compliance",
      "head-ന",
      "order",
      "kmrl"
    ],
    "num_sentences": 17,
    "num_words": 21,
    "chunks": [
      {
        "sentences": [
          "ക മ റയ ൽ സ ആ ൻഡ കപലയ ൻസ ഡപപ ർ മ സരകഷ വപന  ആഭനതര സ ർകകലർ ref.",
          "no.",
          ": kmrlsc202509 തയത: 21-09-2025 വഷയ: സരകഷ നടപടക ക പലകകനനതനളള ന ൾ ർശനമയ ർശങങൾ ക മ റയ യതരകകരടയ ജവനകകരടയ സരകഷ ഉറപപകകനനതനയ തഴ പറയനന ൽ ന ഉട പരബലതത വരതതനന: ർശങങൾ ൻ ൽ 1.",
          "ഷ സരകഷ: ൻ  എ ഷനകള സരകഷ ഉദഗസഥ പ സമയ നരകഷണ നടതതണ.",
          "ർ ർണണ  ബഗജ നഗ സവധന ശരയയ പരവ എനന ദവസന ർകക പരശധന നടതതണ.",
          "2.",
          "യ ൻ ഓപപറഷ ൻസ :  എ വ യതര തടങങനനതനമ സരകഷ ചകക പ ർമര ർണണ മയ പരശധരകകണ.",
          "അടയനതര ഘടടങങള (emergency) sop (standard operating procedure) ൽ ക പലകകണ."
        ],
        "words": [
          "ക",
          "മ",
          "റയ",
          "ൽ",
          "സ",
          "ആ",
          "ൻഡ",
          "കപലയ",
          "ൻസ",
          "ഡപപ",
          "ർ",
          "മ",
          "സരകഷ",
          "വപന",
          "ആഭനതര",
          "സ",
          "ർകകലർ",
          "ref.",
          "no.",
          ":",
          "kmrlsc202509",
          "തയത:",
          "21-09-2025",
          "വഷയ:",
          "സരകഷ",
          "നടപടക",
          "ക",
          "പലകകനനതനളള",
          "ന",
          "ൾ",
          "ർശനമയ",
          "ർശങങൾ",
          "ക",
          "മ",
          "റയ",
          "യതരകകരടയ",
          "ജവനകകരടയ",
          "സരകഷ",
          "ഉറപപകകനനതനയ",
          "തഴ",
          "പറയനന",
          "ൽ",
          "ന",
          "ഉട",
          "പരബലതത",
          "വരതതനന:",
          "ർശങങൾ",
          "ൻ",
          "ൽ",
          "1.",
          "ഷ",
          "സരകഷ:",
          "ൻ",
          "എ",
          "ഷനകള",
          "സരകഷ",
          "ഉദഗസഥ",
          "പ",
          "സമയ",
          "നരകഷണ",
          "നടതതണ.",
          "ർ",
          "ർണണ",
          "ബഗജ",
          "നഗ",
          "സവധന",
          "ശരയയ",
          "പരവ",
          "എനന",
          "ദവസന",
          "ർകക",
          "പരശധന",
          "നടതതണ.",
          "2.",
          "യ",
          "ൻ",
          "ഓപപറഷ",
          "ൻസ",
          ":",
          "എ",
          "വ",
          "യതര",
          "തടങങനനതനമ",
          "സരകഷ",
          "ചകക",
          "പ",
          "ർമര",
          "ർണണ",
          "മയ",
          "പരശധരകകണ.",
          "അടയനതര",
          "ഘടടങങള",
          "(emergency)",
          "sop",
          "(standard",
          "operating",
          "procedure)",
          "ൽ",
          "ക",
          "പലകകണ."
        ],
        "chunk_id": 1,
        "entities": {
          "DATE": [
            "21-09-2025"
          ]
        },
        "summary": "நேபாளத்தில் உள்ள நேபாளப் பகுதிகளில் உள்ள நேபாளப் பகுதிகளில் உள்ள நேபாளப் பகுதிகளில் உள்ள நேபாளப் பகுதிகளில் உள்ள நேபாளப் பகுதிகளில் உள்ள நேபாளப் பகுதிகளில் உள்ள நேபா"
      },
      {
        "sentences": [
          "ർശനമയ 3.",
          "യതരകകരട സരകഷ:  പലററഫ ഏരയയ അടയനതര പറപപട മ (emergency exits) എയപപ ൽ ർഗങങൾ തറനനരകകണ.",
          "യതരകക ർകക സരകഷ ന ർശങങൾ അറയകകനനതനയ മലയള, ഇഷ, ഹ ഭഷകള പരഖപനങങ നടതതണ.",
          "ൽ ൾ 4.",
          "ഫയ ർ ആ ൻഡ ഇലകക ൽ സരകഷ:  ഫയ എകഗഷറക എ മസവ പരശധകകണ.",
          "ർ ൾ  വദത സവധനങങള ൽ ഉയകകവനന തകരറക ൾ ഉട ൻ റപപ ർ ചയയണ.5.",
          "റപപ ർഗ  ഓഡററ:  എ സരകഷ സഭവങങ (incidents) 24 മണകകറനക റപപ ർ ചയയണ.",
          "മസനത ഓഡററ റപപ ർ safety  compliance head-ന സമ ർകകണ .",
          "by order, സരകഷ  അനസത വഭഗ ക മ റയ ലമററഡ (kmrl) ൽ"
        ],
        "words": [
          "ർശനമയ",
          "3.",
          "യതരകകരട",
          "സരകഷ:",
          "പലററഫ",
          "ഏരയയ",
          "അടയനതര",
          "പറപപട",
          "മ",
          "(emergency",
          "exits)",
          "എയപപ",
          "ൽ",
          "ർഗങങൾ",
          "തറനനരകകണ.",
          "യതരകക",
          "ർകക",
          "സരകഷ",
          "ന",
          "ർശങങൾ",
          "അറയകകനനതനയ",
          "മലയള,",
          "ഇഷ,",
          "ഹ",
          "ഭഷകള",
          "പരഖപനങങ",
          "നടതതണ.",
          "ൽ",
          "ൾ",
          "4.",
          "ഫയ",
          "ർ",
          "ആ",
          "ൻഡ",
          "ഇലകക",
          "ൽ",
          "സരകഷ:",
          "ഫയ",
          "എകഗഷറക",
          "എ",
          "മസവ",
          "പരശധകകണ.",
          "ർ",
          "ൾ",
          "വദത",
          "സവധനങങള",
          "ൽ",
          "ഉയകകവനന",
          "തകരറക",
          "ൾ",
          "ഉട",
          "ൻ",
          "റപപ",
          "ർ",
          "ചയയണ.5.",
          "റപപ",
          "ർഗ",
          "ഓഡററ:",
          "എ",
          "സരകഷ",
          "സഭവങങ",
          "(incidents)",
          "24",
          "മണകകറനക",
          "റപപ",
          "ർ",
          "ചയയണ.",
          "മസനത",
          "ഓഡററ",
          "റപപ",
          "ർ",
          "safety",
          "compliance",
          "head-ന",
          "സമ",
          "ർകകണ",
          ".",
          "by",
          "order,",
          "സരകഷ",
          "അനസത",
          "വഭഗ",
          "ക",
          "മ",
          "റയ",
          "ലമററഡ",
          "(kmrl)",
          "ൽ"
        ],
        "chunk_id": 2,
        "entities": {
          "ORG": [
            "പലററഫ",
            "ആ ൻഡ",
            "ഓഡററ",
            "മസനത ഓഡററ",
            "##മറ"
          ],
          "LOC": [
            "മ",
            "ല",
            "##റഡ"
          ]
        },
        "summary": "இசுலாமியப் பேரரசுத் தலைவராகவும், இந்தியப் பேரரசுத் துணைத் தலைவராகவும் இருந்தார். இசுலாமியப் பேரரசுத் தலைவராகவும் இருந்தார். இசுலாமியப் பேரரசுத் தலைவராகவும்"
      }
    ],
    "doc_summary": "குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறி",
    "entities": {
      "DATE": [
        "21-09-2025"
      ],
      "ORG": [
        "##മറ",
        "ആ ൻഡ",
        "പലററഫ",
        "മസനത ഓഡററ",
        "ഓഡററ"
      ],
      "LOC": [
        "ല",
        "##റഡ",
        "മ"
      ]
    }
  },
  {
    "doc_id": "arrayandlinkedlist.jpg",
    "raw_text": "Difference between ArrayList and LinkedList in Java\n\nArrayList LinkedList\nArrayList internally uses a dynamic array | LinkedList internally uses a doubly linked\nto store the elements listto store the elements\n\nelement is removed from the array, all | list, sono bit shifting is required in\n\nthe bits are shifted in memory. | memory.\n\nArrayList consumes less memory than [| A LinkedList consumes more memory than\n\nLinkedList an ArrayList because it also stores the next\nand previous references along with the\ndata,\n\n‘An Arraylist class can act asa list only | LinkedList class can act as alist and\n\nbecause it implements List only. queue both because it implements List\nand Deque interfaces.\n\nArrayList is better for storing and LinkedList is better for manipulating data,\n\naccessing data,\n\n",
    "file_type": "jpg",
    "length": 125,
    "cleaned_text": "difference between arraylist and linkedlist in java arraylist linkedlist arraylist internally uses a dynamic array  linkedlist internally uses a doubly linked to store the elements listto store the elements element is removed from the array, all  list, sono bit shifting is required in the bits are shifted in memory.  memory. arraylist consumes less memory than  a linkedlist consumes more memory than linkedlist an arraylist because it also stores the next and previous references along with the data, an arraylist class can act asa list only  linkedlist class can act as alist and because it implements list only. queue both because it implements list and deque interfaces. arraylist is better for storing and linkedlist is better for manipulating data, accessing data, ",
    "sentences": [
      "difference between arraylist and linkedlist in java arraylist linkedlist arraylist internally uses a dynamic array  linkedlist internally uses a doubly linked to store the elements listto store the elements element is removed from the array, all  list, sono bit shifting is required in the bits are shifted in memory.",
      "memory.",
      "arraylist consumes less memory than  a linkedlist consumes more memory than linkedlist an arraylist because it also stores the next and previous references along with the data, an arraylist class can act asa list only  linkedlist class can act as alist and because it implements list only.",
      "queue both because it implements list and deque interfaces.",
      "arraylist is better for storing and linkedlist is better for manipulating data, accessing data,"
    ],
    "words": [
      "difference",
      "arraylist",
      "linkedlist",
      "java",
      "arraylist",
      "linkedlist",
      "arraylist",
      "internally",
      "us",
      "dynamic",
      "array",
      "linkedlist",
      "internally",
      "us",
      "doubly",
      "linked",
      "store",
      "element",
      "listto",
      "store",
      "element",
      "element",
      "removed",
      "array",
      "list",
      "sono",
      "bit",
      "shifting",
      "required",
      "bit",
      "shifted",
      "memory",
      "memory",
      "arraylist",
      "consumes",
      "less",
      "memory",
      "linkedlist",
      "consumes",
      "memory",
      "linkedlist",
      "arraylist",
      "also",
      "store",
      "next",
      "previous",
      "reference",
      "along",
      "data",
      "arraylist",
      "class",
      "act",
      "asa",
      "list",
      "linkedlist",
      "class",
      "act",
      "alist",
      "implement",
      "list",
      "queue",
      "implement",
      "list",
      "deque",
      "interface",
      "arraylist",
      "better",
      "storing",
      "linkedlist",
      "better",
      "manipulating",
      "data",
      "accessing",
      "data"
    ],
    "num_sentences": 5,
    "num_words": 74,
    "chunks": [
      {
        "sentences": [
          "difference between arraylist and linkedlist in java arraylist linkedlist arraylist internally uses a dynamic array  linkedlist internally uses a doubly linked to store the elements listto store the elements element is removed from the array, all  list, sono bit shifting is required in the bits are shifted in memory.",
          "memory.",
          "arraylist consumes less memory than  a linkedlist consumes more memory than linkedlist an arraylist because it also stores the next and previous references along with the data, an arraylist class can act asa list only  linkedlist class can act as alist and because it implements list only."
        ],
        "words": [
          "difference",
          "between",
          "arraylist",
          "and",
          "linkedlist",
          "in",
          "java",
          "arraylist",
          "linkedlist",
          "arraylist",
          "internally",
          "uses",
          "a",
          "dynamic",
          "array",
          "linkedlist",
          "internally",
          "uses",
          "a",
          "doubly",
          "linked",
          "to",
          "store",
          "the",
          "elements",
          "listto",
          "store",
          "the",
          "elements",
          "element",
          "is",
          "removed",
          "from",
          "the",
          "array,",
          "all",
          "list,",
          "sono",
          "bit",
          "shifting",
          "is",
          "required",
          "in",
          "the",
          "bits",
          "are",
          "shifted",
          "in",
          "memory.",
          "memory.",
          "arraylist",
          "consumes",
          "less",
          "memory",
          "than",
          "a",
          "linkedlist",
          "consumes",
          "more",
          "memory",
          "than",
          "linkedlist",
          "an",
          "arraylist",
          "because",
          "it",
          "also",
          "stores",
          "the",
          "next",
          "and",
          "previous",
          "references",
          "along",
          "with",
          "the",
          "data,",
          "an",
          "arraylist",
          "class",
          "can",
          "act",
          "asa",
          "list",
          "only",
          "linkedlist",
          "class",
          "can",
          "act",
          "as",
          "alist",
          "and",
          "because",
          "it",
          "implements",
          "list",
          "only."
        ],
        "chunk_id": 1,
        "entities": {},
        "summary": "rozdíl mezi arraylist a linkedlist v javě arraylist linkedlist arraylist internally používá dynamický array linkedlist internally používá dvojitě propojený pro ukládání prvků listu pro ukládání prvků prvek je"
      },
      {
        "sentences": [
          "queue both because it implements list and deque interfaces.",
          "arraylist is better for storing and linkedlist is better for manipulating data, accessing data,"
        ],
        "words": [
          "queue",
          "both",
          "because",
          "it",
          "implements",
          "list",
          "and",
          "deque",
          "interfaces.",
          "arraylist",
          "is",
          "better",
          "for",
          "storing",
          "and",
          "linkedlist",
          "is",
          "better",
          "for",
          "manipulating",
          "data,",
          "accessing",
          "data,"
        ],
        "chunk_id": 2,
        "entities": {},
        "summary": "queue both because it implements list and deque interfaces. arraylist is better for storing and linkedlist is better for manipulating data, accessing data,"
      }
    ],
    "doc_summary": "ភាព ខុស គ្នា រវាង arraylist និង linkedlist ក្នុង java arraylist linkedlist arraylist ខាង ក្នុង ប្រើ array dynamic linkedlist ខាង ក្នុង ប្រើ តំណ ពីរ ដង ដើម្បី ទុក ធាតុ listto store the elements element is removed from the",
    "entities": {}
  }
]